import org.grails.gradle.plugin.web.gsp.GroovyPageCompileTask

buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven { url 'https://repo.gradle.org/gradle/libs-releases' }
        if (project.projectVersion.endsWith('-SNAPSHOT')) {
            maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
        }
    }
    dependencies {
        classpath "org.graceframework:grace-gradle-plugin:$graceVersion"
        classpath "io.github.gradle-nexus:publish-plugin:1.3.0"
        classpath "io.spring.gradle:dependency-management-plugin:$springDependencyManagementPluginVersion"
    }
}

group "org.graceframework.plugins"

apply plugin: "org.graceframework.grace-plugin"
apply plugin: "io.spring.dependency-management"

dependencyManagement {
    // imports {
    //     mavenBom "org.graceframework:grace-bom:$graceVersion"
    // }
    applyMavenExclusions false
}

dependencies {
    api "org.graceframework:grace-core:$graceVersion", {
        exclude group: 'org.graceframework', module: 'grace-datastore-core'
    }
    compileOnly "org.graceframework:grace-boot:$graceVersion"
    api project(":views-core")

    api "org.graceframework:grace-datastore-gorm:$gormVersion"
    testImplementation "org.graceframework:grace-test-support:$graceVersion"
    testImplementation project(":views-json-testing-support")
    testImplementation "org.graceframework:grace-datastore-gorm-hibernate:$gormVersion"
    testRuntimeOnly "org.javassist:javassist:$javassistVersion"

    console "org.graceframework:grace-console"
}

tasks.withType(GroovyPageCompileTask) {
    classpath += configurations.compileClasspath
}

jar {
    exclude "*.gson"
    enabled = true
    archiveClassifier.set('plugin')
    includeEmptyDirs = false
}

springBoot {
    mainClass.set('grails.plugin.json.view.Application')
}
