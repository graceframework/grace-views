publishing {
    publications {
        maven(MavenPublication) {
            pom.withXml {
                def pomNode = asNode()
                try {
                    pomNode.dependencyManagement.replaceNode {}
                } catch (Throwable e) {
                    // ignore
                }

                // simply remove dependencies without a version
                // version-less dependencies are handled with dependencyManagement
                // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
                pomNode.dependencies.dependency.findAll {
                    it.version.text().isEmpty()
                }.each {
                    try {
                        it.replaceNode {}
                    } catch (Throwable e) {
                        // ignore
                    }
                }
            }
            artifactId project.name
            from components.java
            afterEvaluate {
                artifact source: sourcesJar, classifier: "sources"
                artifact source: javadocJar, classifier: "javadoc"
            }
        }
    }

    repositories {
        maven {
            credentials {
                username System.getenv('ARTIFACTORY_USERNAME') ?: project.properties.get('artifactoryUsername')
                password System.getenv("ARTIFACTORY_PASSWORD") ?: project.properties.get('artifactoryPassword')
            }

            if(group == 'org.grails.plugins') {
                if(version.endsWith('-SNAPSHOT')) {
                    url "https://repo.grails.org/grails/plugins3-snapshots-local"
                } else {
                    url  "https://repo.grails.org/grails/plugins3-releases-local"
                }
            }
            else {
                if(version.endsWith('-SNAPSHOT')) {
                    url "https://repo.grails.org/grails/libs-snapshots-local"
                } else {
                    url  "https://repo.grails.org/grails/libs-releases-local"
                }
            }
        }
    }
}

task install(dependsOn: project.tasks.withType(PublishToMavenLocal))
